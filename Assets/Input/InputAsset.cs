//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/InputAsset.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputAsset : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputAsset()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputAsset"",
    ""maps"": [
        {
            ""name"": ""ActionMap"",
            ""id"": ""4b73938f-9a0f-4f16-8614-75d04d618c21"",
            ""actions"": [
                {
                    ""name"": ""PlayerMovement"",
                    ""type"": ""Value"",
                    ""id"": ""27712be3-c37b-40be-b74b-a21e88b62916"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CursorMovement"",
                    ""type"": ""Value"",
                    ""id"": ""2c6202c7-7990-4063-8a7a-3e0a2f19cc74"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""2836391e-6a47-44ab-ba2b-aa77e63a9ba6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fly"",
                    ""type"": ""Button"",
                    ""id"": ""63874344-f0a3-443c-bdf0-88a9a514a559"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SnapCursor"",
                    ""type"": ""Button"",
                    ""id"": ""ec84131d-5e9b-4c6e-8b13-f0caf0c977d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlaceTorch"",
                    ""type"": ""Button"",
                    ""id"": ""ef7c1fc9-556d-4984-b717-4096434ee772"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c49bb4c6-4887-4b2b-9577-23327b002357"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector - Keyboard"",
                    ""id"": ""eb764e8f-0e59-4d4b-ba0a-594a61f5391d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1139b9ba-7710-49e3-8abd-481f53a0cdd8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b87076b9-dc31-4913-8b74-0f3310caa3ea"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9f5266a6-1912-4a0f-ae59-5f1a308c2887"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6ebfa1d1-df59-49d6-ad8b-93552cf53de4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eb53303e-182f-4267-b119-f55a4ca2c2c1"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c29e0d85-2adc-49c2-9b79-fb5088a5b89d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1863855c-2b8e-4b9f-a697-c1ac44af5516"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""239625dd-14ce-424e-b6fb-424a4dbd4dcd"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e985e31-b67a-4e0c-ab32-52cf66c45b84"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fly"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e2b3416-f43a-4a15-9d47-c80a47d9a3f0"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fly"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbc5edcb-35d7-488c-ace6-9a52460e7189"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SnapCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d20a4b0-7268-4810-a435-21c1ba5c3f2f"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SnapCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db6ea19e-e7cd-4543-b307-103c446b2c3c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlaceTorch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e2c9407-42e5-460d-81f9-325d0c3e4551"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlaceTorch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ActionMap
        m_ActionMap = asset.FindActionMap("ActionMap", throwIfNotFound: true);
        m_ActionMap_PlayerMovement = m_ActionMap.FindAction("PlayerMovement", throwIfNotFound: true);
        m_ActionMap_CursorMovement = m_ActionMap.FindAction("CursorMovement", throwIfNotFound: true);
        m_ActionMap_Click = m_ActionMap.FindAction("Click", throwIfNotFound: true);
        m_ActionMap_Fly = m_ActionMap.FindAction("Fly", throwIfNotFound: true);
        m_ActionMap_SnapCursor = m_ActionMap.FindAction("SnapCursor", throwIfNotFound: true);
        m_ActionMap_PlaceTorch = m_ActionMap.FindAction("PlaceTorch", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ActionMap
    private readonly InputActionMap m_ActionMap;
    private IActionMapActions m_ActionMapActionsCallbackInterface;
    private readonly InputAction m_ActionMap_PlayerMovement;
    private readonly InputAction m_ActionMap_CursorMovement;
    private readonly InputAction m_ActionMap_Click;
    private readonly InputAction m_ActionMap_Fly;
    private readonly InputAction m_ActionMap_SnapCursor;
    private readonly InputAction m_ActionMap_PlaceTorch;
    public struct ActionMapActions
    {
        private @InputAsset m_Wrapper;
        public ActionMapActions(@InputAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerMovement => m_Wrapper.m_ActionMap_PlayerMovement;
        public InputAction @CursorMovement => m_Wrapper.m_ActionMap_CursorMovement;
        public InputAction @Click => m_Wrapper.m_ActionMap_Click;
        public InputAction @Fly => m_Wrapper.m_ActionMap_Fly;
        public InputAction @SnapCursor => m_Wrapper.m_ActionMap_SnapCursor;
        public InputAction @PlaceTorch => m_Wrapper.m_ActionMap_PlaceTorch;
        public InputActionMap Get() { return m_Wrapper.m_ActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionMapActions set) { return set.Get(); }
        public void SetCallbacks(IActionMapActions instance)
        {
            if (m_Wrapper.m_ActionMapActionsCallbackInterface != null)
            {
                @PlayerMovement.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnPlayerMovement;
                @PlayerMovement.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnPlayerMovement;
                @PlayerMovement.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnPlayerMovement;
                @CursorMovement.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnCursorMovement;
                @CursorMovement.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnCursorMovement;
                @CursorMovement.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnCursorMovement;
                @Click.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnClick;
                @Fly.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnFly;
                @Fly.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnFly;
                @Fly.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnFly;
                @SnapCursor.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnSnapCursor;
                @SnapCursor.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnSnapCursor;
                @SnapCursor.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnSnapCursor;
                @PlaceTorch.started -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnPlaceTorch;
                @PlaceTorch.performed -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnPlaceTorch;
                @PlaceTorch.canceled -= m_Wrapper.m_ActionMapActionsCallbackInterface.OnPlaceTorch;
            }
            m_Wrapper.m_ActionMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PlayerMovement.started += instance.OnPlayerMovement;
                @PlayerMovement.performed += instance.OnPlayerMovement;
                @PlayerMovement.canceled += instance.OnPlayerMovement;
                @CursorMovement.started += instance.OnCursorMovement;
                @CursorMovement.performed += instance.OnCursorMovement;
                @CursorMovement.canceled += instance.OnCursorMovement;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @Fly.started += instance.OnFly;
                @Fly.performed += instance.OnFly;
                @Fly.canceled += instance.OnFly;
                @SnapCursor.started += instance.OnSnapCursor;
                @SnapCursor.performed += instance.OnSnapCursor;
                @SnapCursor.canceled += instance.OnSnapCursor;
                @PlaceTorch.started += instance.OnPlaceTorch;
                @PlaceTorch.performed += instance.OnPlaceTorch;
                @PlaceTorch.canceled += instance.OnPlaceTorch;
            }
        }
    }
    public ActionMapActions @ActionMap => new ActionMapActions(this);
    public interface IActionMapActions
    {
        void OnPlayerMovement(InputAction.CallbackContext context);
        void OnCursorMovement(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnFly(InputAction.CallbackContext context);
        void OnSnapCursor(InputAction.CallbackContext context);
        void OnPlaceTorch(InputAction.CallbackContext context);
    }
}
